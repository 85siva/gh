{"name":"gh","tagline":"Fast GitHub command line client.","body":"## Installation\r\n\r\nThere are [compiled binary forms of gh](https://drone.io/github.com/jingweno/gh/files) for Darwin, Linux and Windows.\r\n\r\nTo install gh on OSX with [Homebrew](https://github.com/mxcl/homebrew), run:\r\n\r\n    $ brew install https://raw.github.com/jingweno/gh/master/homebrew/gh.rb\r\n\r\n## Upgrade\r\n\r\nSince gh is under heavy development, I roll out new releases often.\r\nPlease take a look at our [CI server](https://drone.io/github.com/jingweno/gh/files) for the latest built binaries. We plan to implement automatic upgrade in the future.\r\n\r\nTo upgrade gh on OSX with Homebrew, run:\r\n\r\n    $ brew upgrade https://raw.github.com/jingweno/gh/master/homebrew/gh.rb\r\n\r\n## Usage\r\n\r\n### gh help\r\n    \r\n    $ gh help\r\n    Usage: gh [command] [options] [arguments]\r\n\r\n    Commands:\r\n\r\n        pull              Open a pull request on GitHub\r\n        ci                Show CI status of a commit\r\n        browse            Open a GitHub page in the default browser\r\n        compare           Open a compare page on GitHub\r\n        help              Show help\r\n        version           Show gh version\r\n\r\n    See 'gh help [command]' for more information about a command.\r\n\r\n### gh pull\r\n\r\n    # while on a topic branch called \"feature\":\r\n    $ gh pull\r\n    [ opens text editor to edit title & body for the request ]\r\n    [ opened pull request on GitHub for \"YOUR_USER:feature\" ]\r\n\r\n    # explicit pull base & head:\r\n    $ gh pull -b jingweno:master -h jingweno:feature\r\n\r\n    $ gh pull -i 123\r\n    [ attached pull request to issue #123 ]\r\n\r\n### gh ci\r\n\r\n    $ gh ci\r\n    > (prints CI state of HEAD and exits with appropriate code)\r\n    > One of: success (0), error (1), failure (1), pending (2), no\r\n    > status (3)\r\n\r\n    $ gh ci BRANCH\r\n    > (prints CI state of BRANCH and exits with appropriate code)\r\n    > One of: success (0), error (1), failure (1), pending (2), no\r\n    > status (3)\r\n\r\n    $ gh ci SHA\r\n    > (prints CI state of SHA and exits with appropriate code)\r\n    > One of: success (0), error (1), failure (1), pending (2), no\r\n    > status (3)\r\n\r\n### gh browse\r\n\r\n    gh browse\r\n    > open https://github.com/YOUR_USER/CURRENT_REPO\r\n\r\n    $ gh browse commit/SHA\r\n    > open https://github.com/YOUR_USER/CURRENT_REPO/commit/SHA\r\n\r\n    $ gh browse issues\r\n    > open https://github.com/YOUR_USER/CURRENT_REPO/issues\r\n\r\n    $ gh browse -u jingweno -r gh\r\n    > open https://github.com/jingweno/gh\r\n\r\n    $ gh browse -u jingweno -r gh commit/SHA\r\n    > open https://github.com/jingweno/gh/commit/SHA\r\n\r\n    $ git browse -r resque\r\n    > open https://github.com/YOUR_USER/resque\r\n\r\n    $ git browse -r resque network\r\n    > open https://github.com/YOUR_USER/resque/network\r\n\r\n### gh compare\r\n\r\n    $ gh compare refactor\r\n    > open https://github.com/CURRENT_REPO/compare/refactor\r\n\r\n    $ gh compare 1.0..1.1\r\n    > open https://github.com/CURRENT_REPO/compare/1.0...1.1\r\n\r\n    $ gh compare -u other-user patch\r\n    > open https://github.com/other-user/REPO/compare/patch","google":"UA-41570916-1","note":"Don't delete this file! It's used internally to help with page regeneration."}